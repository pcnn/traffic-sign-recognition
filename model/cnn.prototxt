name:"tsr"
layer{
	name:"data"
	type:"ImageData"
	top:"data"
	top:"label"
	include{
		phase:TRAIN
	}
	transform_param{
		scale:0.00390625
		#CHANGE THE PATH IF NECESSARY
		mean_file:"gtsr_mean.binaryproto" 
	}
	image_data_param{
		#CHANGE THE PATH IF NECESSARY
		source:"GTSRB/Training_CNN/train.txt"
		batch_size: 50
		new_height:48
		new_width:48
		shuffle:true
	}
}
layer{
	name:"data"
	type:"ImageData"
	top:"data"
	top:"label"
	include{
		phase:TEST
	}
	transform_param{
		scale:0.00390625
		#CHANGE THE PATH IF NECESSARY
		mean_file:"gtsr_mean.binaryproto"
	}
	image_data_param{
		#CHANGE THE PATH IF NECESSARY
		source:"GTSRB/Validate_CNN/validate.txt"
		batch_size: 100
		new_height:48
		new_width:48
		shuffle:false
	}
}
layer{
	name:"conv1x1"
	type:"Convolution"
	bottom: "data"
	top:"conv1x1"
	convolution_param{
		kernel_size:1
		num_output:3
		group:3
		stride:1
		weight_filler{
			type:"xavier"
		}
		bias_filler{
			type:"constant"
		}
	}
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 2
	}
}
layer{
	name:"conv7x7_1"
	type:"Convolution"
	bottom:"conv1x1"
	top:"conv7x7_1"
	convolution_param{
		num_output:100
		kernel_size:7
		stride:1
		group:1
		weight_filler{
			type:"xavier"
		}
		bias_filler{
			type:"constant"
		}
	}
	param{
		lr_mult:1
	}
	param{
		lr_mult:2
	}
}
layer{
	name:"reul2"
	type:"ReLU"
	bottom:"conv7x7_1"
	top:"conv7x7_1"
	relu_param{
		negative_slope:0.01
	}
}
layer{
	name:"pooling1"
	type:"Pooling"
	bottom:"conv7x7_1"
	top:"pooling1"
	pooling_param{
		pool:MAX
		kernel_size:3
		stride:2
	}
}
layer{
	name:"conv4x4_1"
	type:"Convolution"
	bottom:"pooling1"
	top:"conv4x4_1"
	convolution_param{
		num_output:150
		kernel_size:4
		stride:1
		group:2
		weight_filler{
			type:"xavier"
		}
		bias_filler{
			type:"constant"
		}
	}
	param{
		lr_mult:1
	}
	param{
		lr_mult:2
	}
}
layer{
	name:"reul3"
	type:"ReLU"
	bottom:"conv4x4_1"
	top:"conv4x4_1"
	relu_param{
		negative_slope:0.01
	}
}
layer{
	name:"pooling2"
	type:"Pooling"
	bottom:"conv4x4_1"
	top:"pooling2"
	pooling_param{
		pool:MAX
		kernel_size:3
		stride:2
	}
}
layer{
	name:"conv4x4_2"
	type:"Convolution"
	bottom:"pooling2"
	top:"conv4x4_2"
	convolution_param{
		num_output:250
		kernel_size:4
		stride:1
		group:2
		weight_filler{
			type:"xavier"
		}
		bias_filler{
			type:"constant"
		}
	}
	param{
		lr_mult:1
	}
	param{
		lr_mult:2
	}
}
layer{
	name:"reul4"
	type:"ReLU"
	bottom:"conv4x4_2"
	top:"conv4x4_2"
	relu_param{
		negative_slope:0.01
	}
}
layer{
	name:"pooling3"
	type:"Pooling"
	bottom:"conv4x4_2"
	top:"pooling3"
	pooling_param{
		pool:MAX
		kernel_size:3
		stride:2
	}
}
layer{
	name:"ip1"
	type:"InnerProduct"
	bottom:"pooling3"
	top:"ip1"
	inner_product_param{
		num_output:300
		weight_filler{
			type:"xavier"
		}
		bias_filler{
			type:"constant"
		}
	}
	param {
	    lr_mult: 1
	}
	param {
	    lr_mult: 2
	}
}
layer{
	name:"relu_fc1"
	type:"ReLU"
	bottom:"ip1"
	top:"relu_fc1"
	relu_param{
		negative_slope:0.01
	}
}
layer{
	name:"drop1"
	type:"Dropout"
	bottom:"relu_fc1"
	top:"drop1"
	dropout_param{
		dropout_ratio: 0.5
	}
}
layer{
	name:"ipclassify"
	type:"InnerProduct"
	bottom:"drop1"
	top:"ipclassify"
	inner_product_param{
		num_output:43
		weight_filler{
			type:"xavier"
		}
		bias_filler{
			type:"constant"
		}
	}
	param {
	    lr_mult: 1
	}
	param {
	    lr_mult: 2
	}
}
layer{
	name:"accuracy1"
	type:"Accuracy"	
	bottom:"ipclassify"
	bottom:"label"
	top:"accuracy1"
	include{
		phase:TEST
	}
}
layer{
	name:"accuracy2"
	type:"Accuracy"	
	bottom:"ipclassify"
	bottom:"label"
	top:"accuracy2"
	accuracy_param{
		top_k:2
	}
	include{
		phase:TEST
	}
}
layer{
	name:"accuracy5"
	type:"Accuracy"	
	bottom:"ipclassify"
	bottom:"label"
	top:"accuracy5"
	accuracy_param{
		top_k:5
	}
	include{
		phase:TEST
	}
}
layer{
	name:"loss"
	type:"SoftmaxWithLoss"
	bottom:"ipclassify"
	bottom:"label"
	top:"loss"	
}
